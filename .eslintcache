[{"/home/sayantan/Documents/code/teachers/src/index.js":"1","/home/sayantan/Documents/code/teachers/src/App.js":"2","/home/sayantan/Documents/code/teachers/src/reportWebVitals.js":"3","/home/sayantan/Documents/code/teachers/src/components/Login.js":"4","/home/sayantan/Documents/code/teachers/src/components/Navigationbar.js":"5","/home/sayantan/Documents/code/teachers/src/components/CakeContainer.js":"6","/home/sayantan/Documents/code/teachers/src/components/Signup.js":"7","/home/sayantan/Documents/code/teachers/src/components/Area1.js":"8","/home/sayantan/Documents/code/teachers/src/components/Warehouse.js":"9","/home/sayantan/Documents/code/teachers/src/components/WriteComponent.js":"10","/home/sayantan/Documents/code/teachers/src/components/NewsContainer.js":"11","/home/sayantan/Documents/code/teachers/src/redux/store.js":"12","/home/sayantan/Documents/code/teachers/src/redux/actions.js":"13","/home/sayantan/Documents/code/teachers/src/config.js":"14","/home/sayantan/Documents/code/teachers/src/redux/reducer.js":"15","/home/sayantan/Documents/code/teachers/src/components/forms/SignupForm.js":"16","/home/sayantan/Documents/code/teachers/src/components/forms/LoginForm.js":"17","/home/sayantan/Documents/code/teachers/src/components/card/progress.js":"18","/home/sayantan/Documents/code/teachers/src/redux/actionTypes.js":"19"},{"size":548,"mtime":1691862487101,"results":"20","hashOfConfig":"21"},{"size":1538,"mtime":1697132615725,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1691862487101,"results":"23","hashOfConfig":"21"},{"size":1230,"mtime":1695643334093,"results":"24","hashOfConfig":"21"},{"size":3000,"mtime":1699515851704,"results":"25","hashOfConfig":"21"},{"size":582,"mtime":1695643315061,"results":"26","hashOfConfig":"21"},{"size":478,"mtime":1691862487101,"results":"27","hashOfConfig":"21"},{"size":1672,"mtime":1699604888656,"results":"28","hashOfConfig":"21"},{"size":3362,"mtime":1697129275770,"results":"29","hashOfConfig":"21"},{"size":2210,"mtime":1697181575311,"results":"30","hashOfConfig":"21"},{"size":1780,"mtime":1698907801338,"results":"31","hashOfConfig":"21"},{"size":307,"mtime":1691862487101,"results":"32","hashOfConfig":"21"},{"size":322,"mtime":1691862487101,"results":"33","hashOfConfig":"21"},{"size":228,"mtime":1699515847852,"results":"34","hashOfConfig":"21"},{"size":841,"mtime":1691862487101,"results":"35","hashOfConfig":"21"},{"size":4426,"mtime":1691862487101,"results":"36","hashOfConfig":"21"},{"size":3577,"mtime":1695643376210,"results":"37","hashOfConfig":"21"},{"size":898,"mtime":1698222946883,"results":"38","hashOfConfig":"21"},{"size":366,"mtime":1691862487101,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"xi734x",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":1,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/sayantan/Documents/code/teachers/src/index.js",[],["84","85"],"/home/sayantan/Documents/code/teachers/src/App.js",["86"],"import \"./App.css\";\nimport { useEffect } from \"react\";\nimport { Navigationbar } from \"./components/Navigationbar\";\nimport { Login } from \"./components/Login\";\nimport { Area1 } from \"./components/Area1\";\nimport { Signup } from \"./components/Signup\";\nimport { Warehouse } from \"./components/Warehouse\";\nimport { Cake } from \"./components/CakeContainer\";\nimport { NewsComponent } from \"./components/NewsContainer\";\nimport { WriteComponent } from \"./components/WriteComponent\";\nimport reactGa from \"react-ga\";\n\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  useEffect(() => {\n    reactGa.initialize(\"UA-92548969-2\");\n    reactGa.pageview(\"/\");\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Navigationbar />\n        <Switch>\n          <div className=\"main-class\">\n            <Route exact path=\"/\">\n              <Area1 />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route exact path=\"/warehouse\">\n              <Warehouse />\n            </Route>\n            <Route exact path=\"/news\">\n              <NewsComponent />\n            </Route>\n            <Route exact path=\"/write\">\n              <WriteComponent />\n            </Route>\n          </div>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","/home/sayantan/Documents/code/teachers/src/reportWebVitals.js",[],"/home/sayantan/Documents/code/teachers/src/components/Login.js",["87","88","89"],"import React, { useEffect, useState } from \"react\";\nimport { Loginform } from \"./forms/LoginForm\";\nimport { delAuth, initAuth } from \"../redux/actions\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\n\nexport function Login(props) {\n  const [isValidToken, setIsValidToken] = useState(null);\n  const dispatch = useDispatch();\n\n  const removeToken = () => {\n    localStorage.setItem(\"token\", null);\n    setIsValidToken(null);\n    dispatch(delAuth());\n  };\n\n  if (!isValidToken) {\n    return (\n      <div\n        style={{\n          background: \"linear-gradient(#112233, #002222)\",\n          color: \"white\",\n          textAlign: \"center\",\n          height: \"93vh\",\n        }}\n      >\n        <div style={{ paddingTop: \"10vh\" }}></div>\n        <Loginform />\n      </div>\n    );\n  } else {\n    return (\n      <div\n        style={{\n          background: \"linear-gradient(#112233, #002222)\",\n          color: \"white\",\n          textAlign: \"center\",\n          height: \"93vh\",\n        }}\n      >\n        <div style={{ paddingTop: \"10vh\" }}></div>\n        <h2>Hi, {isValidToken.message.name}</h2>\n        <h2>You are already loggedin</h2>\n        <button onClick={removeToken}>Logout</button>\n      </div>\n    );\n  }\n}\n","/home/sayantan/Documents/code/teachers/src/components/Navigationbar.js",[],"/home/sayantan/Documents/code/teachers/src/components/CakeContainer.js",[],"/home/sayantan/Documents/code/teachers/src/components/Signup.js",[],"/home/sayantan/Documents/code/teachers/src/components/Area1.js",["90","91","92","93","94"],"/home/sayantan/Documents/code/teachers/src/components/Warehouse.js",["95","96","97","98","99"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useFormik } from \"formik\";\nimport { URL } from \"../config\";\nimport reactGa from \"react-ga\";\n\nexport function Warehouse(props) {\n  const [testData, setTestData] = useState([]);\n  const [stateToken, setStateToken] = useState(\"\");\n\n  useEffect(() => {\n    const authToken = localStorage.getItem(\"token\");\n    setStateToken(authToken);\n    reactGa.initialize(\"UA-92548969-2\");\n    reactGa.pageview(\"/warehouse\");\n  }, []);\n\n  const fetchData = () => {\n    const authToken = localStorage.getItem(\"token\");\n    setStateToken(authToken);\n    axios({\n      method: \"post\",\n      url: URL + \"user/getdata\",\n      data: { token: authToken },\n    })\n      .then((res) => {\n        setTestData(res.data);\n      })\n      .catch((err) => {\n        console.log(\"error returned at fetchData: \" + err);\n      });\n  };\n  const auth = useSelector((state) => state.auth);\n  if (auth.isLoggedIn) {\n    var userId = auth.user.id;\n  }\n\n  var [saveSuccess, setSaveSuccess] = useState(false);\n  const [savedData, setSavedData] = useState(testData);\n  const formik = useFormik({\n    initialValues: {\n      data: \"\",\n    },\n    onSubmit: (values) => {\n      axios\n        .post(`${URL}user/save`, { token: stateToken, data: values })\n        .then((res) => {\n          //USERCREATED SUCCESS\n          if (res.data.code === \"dataSaved\") {\n            setSaveSuccess(true);\n            alert(\"Data saved successfully\");\n          }\n\n          console.log(res);\n          // console.log(res.data);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      // alert(JSON.stringify(values));\n    },\n  });\n\n  return (\n    <div className=\"warehouse-main\">\n      <div className=\"dataForm\">\n        <h2>HTTP Logger</h2>\n        <Form className=\"data-form\" onSubmit={formik.handleSubmit}>\n          <Form.Group controlId=\"formBasicName\">\n            <Form.Label>Anything you want to save</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"data\"\n              placeholder=\"Enter data\"\n              onChange={formik.handleChange}\n              value={formik.values.data}\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit Data\n          </Button>\n        </Form>\n      </div>\n      <div className=\"data-api\">\n        <p>\n          You can also log your data from your application. Api details are\n          given below\n        </p>\n        <code>Link: {URL}user/save</code>\n        <br />\n        <code>\n          Request method: POST, Object:\n          {`{\"token\":\"` +\n            stateToken +\n            `\"\n                \"data\": {\n                  <YOUR JSON DATA>\n                }\n            }`}\n        </code>\n      </div>\n      <div className=\"dataFormUpper\" style={{ marginTop: \"150px\" }}>\n        <h2>Your saved data</h2>\n        <Button style={{ marginBottom: \"30px\" }} onClick={() => fetchData()}>\n          Fetch Data\n        </Button>\n        <ol>\n          {testData\n            .slice(0)\n            .reverse()\n            .map((data) => {\n              return <li>{JSON.stringify(data.data.data)}</li>;\n            })}\n        </ol>\n      </div>\n    </div>\n  );\n}\n","/home/sayantan/Documents/code/teachers/src/components/WriteComponent.js",[],"/home/sayantan/Documents/code/teachers/src/components/NewsContainer.js",[],"/home/sayantan/Documents/code/teachers/src/redux/store.js",[],"/home/sayantan/Documents/code/teachers/src/redux/actions.js",[],"/home/sayantan/Documents/code/teachers/src/config.js",[],"/home/sayantan/Documents/code/teachers/src/redux/reducer.js",[],"/home/sayantan/Documents/code/teachers/src/components/forms/SignupForm.js",["100"],"import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useFormik } from 'formik';\nimport axios from \"axios\";\nimport {URL} from '../../config'\n\n\nexport function SignupForm(props) {\n    var [emailAlreadyExists, setemailAlreadyExists] = useState(false)\n    var [signupSuccess, setSignupSuccess] = useState(false)\n    var [passwordValidationError, setPasswordValidationError] = useState(null)\n    const [otpSentSuccessfully, setOtpSentSuccessfully] = useState(false)\n\n        // Pass the useFormik() hook initial form values and a submit function that will\n        // be called when the form is submitted\n        const formik = useFormik({\n          initialValues: {\n                email: '',\n                name:'',\n                password:'',\n                otp:''\n          },\n          onSubmit: values => {\n            axios.post(`${URL}user/signup`, values)\n            .then(res => {\n                if(res.data === \"Email already exists\"){\n                    setemailAlreadyExists(true)\n                }\n\n                //USERCREATED SUCCESS\n                if(res.data.code === \"userCreated\"){\n                    setSignupSuccess(true)\n                    // alert(\"signup success\")\n                }\n\n                //validationFalse\n                if(res.data.code === \"validationFalse\"){\n                    // setValidationError(res.data.message)\n                    let msg = res.data.message\n                    let result = msg.search(\"password\")\n                    if (result) setPasswordValidationError(msg)\n                }\n                console.log(res);\n                // console.log(res.data);\n            })\n            .catch(error =>{\n                console.log(error)\n            })\n            // alert(JSON.stringify(values));\n          },\n        });\n        const sendOTP = ()=>{\n            let email = formik.values.email\n            console.log(\"Email provided to send otp \"+email)\n            axios.post(`${URL}user/otpsend`, {email})\n            .then(res=>{\n                console.log(\"Email Sent response 1 \"+JSON.stringify(res))\n                if(res.data.code == \"otpSent\"){\n                    console.log(\"Email Sent response 2 \"+res)\n                    setOtpSentSuccessfully(true)\n                    alert(\"OTP Sent Successfully to your Email\")\n                }\n            })\n        }\n    if(signupSuccess) return (\n        <div>\n        <h2>Signup Successful</h2>\n        <h3>Please try to login</h3>\n        </div>\n        )\n        else return (\n        <div>\n            <Form className=\"login-form\" onSubmit={formik.handleSubmit}>\n            <Form.Group controlId=\"formBasicName\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control type=\"name\" name=\"name\" placeholder=\"Enter name\" onChange={formik.handleChange} value={formik.values.name}/>\n            </Form.Group>\n            <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" readOnly={otpSentSuccessfully} onChange={formik.handleChange} value={formik.values.email} />\n                <Form.Text className=\"text-muted\" hidden={!emailAlreadyExists}>\n                This email is already exists, try with another email\n                </Form.Text>\n                <Form.Text className=\"text-muted\">\n                <Button onClick={sendOTP} hidden={otpSentSuccessfully}>Send OTP to my email</Button>\n                </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"formBasicOTP\">\n                <Form.Label>OTP</Form.Label>\n                <Form.Control type=\"otp\" name=\"otp\" placeholder=\"Enter otp\" onChange={formik.handleChange} value={formik.values.otp}/>\n                \n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" onChange={formik.handleChange} value={formik.values.password}/>\n                <Form.Text className=\"text-muted\" hidden={!passwordValidationError}>\n                Error: {passwordValidationError}\n                </Form.Text>\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n                Signup\n            </Button>\n            </Form>\n        </div>\n    )\n}\n","/home/sayantan/Documents/code/teachers/src/components/forms/LoginForm.js",["101"],"import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useFormik } from \"formik\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { initAuth } from \"../../redux/actions\";\nimport { URL } from \"../../config\";\n\nexport function Loginform(props) {\n  var [loginSuccess, setLoginSuccess] = useState(false);\n  var [authFailed, setAuthFailed] = useState(false);\n  var [validationError, setValidationError] = useState(null);\n  let history = useHistory();\n  let dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    onSubmit: (values) => {\n      axios\n        .post(`${URL}user/login`, values)\n        .then((res) => {\n          // SUCCESS\n          console.log(\"res: \" + JSON.stringify(res));\n          if (res.data.code === \"Loggedin\") {\n            localStorage.setItem(\"token\", res.data.token);\n            setLoginSuccess(true);\n            dispatch(initAuth(res.data.user));\n            history.push(\"/warehouse\");\n          }\n        })\n        .catch((error) => {\n          console.log(\"Error log: \" + error);\n          //   console.log(\"Error log: \"+ JSON.stringify(error.response))\n          // console.log(\"Error log: \"+ error.response.data.code)\n\n          //VALIDATION ERROR\n          if (error.response.data.code === \"validationFalse\") {\n            // setValidationError(res.data.message)\n            setValidationError(true);\n          }\n          // FAILED\n          if (\n            error.response.data === \"Not valid password\" ||\n            error.response.data === \"Email do not exists\"\n          ) {\n            setAuthFailed(true);\n          }\n        });\n      // alert(JSON.stringify(values));\n    },\n  });\n  if (loginSuccess) {\n    return (\n      <div>\n        <h2>Login Successful</h2>\n        {/* {loginSuccess && (\n                <button>You are signed in</button>\n            )} */}\n      </div>\n    );\n  } else\n    return (\n      <div>\n        <Form className=\"login-form\" onSubmit={formik.handleSubmit}>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              name=\"email\"\n              onChange={formik.handleChange}\n              value={formik.values.email}\n            />\n            <Form.Text className=\"text-muted\">\n              Your information will be kept confidential.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              onChange={formik.handleChange}\n              value={formik.values.password}\n            />\n            <Form.Text\n              className=\"text-muted\"\n              hidden={!authFailed}\n              style={{ color: \"red !important\" }}\n            >\n              Email or password is wrong\n            </Form.Text>\n            <Form.Text\n              className=\"text-muted\"\n              hidden={!validationError}\n              style={{ color: \"red !important\" }}\n            >\n              Must be valid Email and password should be min 8 characters long\n            </Form.Text>\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Login\n          </Button>\n        </Form>\n      </div>\n    );\n}\n","/home/sayantan/Documents/code/teachers/src/components/card/progress.js",[],"/home/sayantan/Documents/code/teachers/src/redux/actionTypes.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":8,"column":10,"nodeType":"108","messageId":"109","endLine":8,"endColumn":14},{"ruleId":"106","severity":1,"message":"110","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":26},{"ruleId":"106","severity":1,"message":"111","line":3,"column":19,"nodeType":"108","messageId":"109","endLine":3,"endColumn":27},{"ruleId":"106","severity":1,"message":"112","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":13},{"ruleId":"106","severity":1,"message":"113","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":14},{"ruleId":"106","severity":1,"message":"114","line":8,"column":9,"nodeType":"108","messageId":"109","endLine":8,"endColumn":28},{"ruleId":"115","severity":1,"message":"116","line":21,"column":13,"nodeType":"117","endLine":21,"endColumn":47},{"ruleId":"115","severity":1,"message":"116","line":24,"column":13,"nodeType":"117","endLine":28,"endColumn":15},{"ruleId":"118","severity":2,"message":"119","line":54,"column":8,"nodeType":"120","messageId":"121","endLine":54,"endColumn":18},{"ruleId":"106","severity":1,"message":"122","line":2,"column":23,"nodeType":"108","messageId":"109","endLine":2,"endColumn":34},{"ruleId":"106","severity":1,"message":"123","line":37,"column":9,"nodeType":"108","messageId":"109","endLine":37,"endColumn":15},{"ruleId":"106","severity":1,"message":"124","line":40,"column":8,"nodeType":"108","messageId":"109","endLine":40,"endColumn":19},{"ruleId":"106","severity":1,"message":"125","line":41,"column":10,"nodeType":"108","messageId":"109","endLine":41,"endColumn":19},{"ruleId":"106","severity":1,"message":"126","line":41,"column":21,"nodeType":"108","messageId":"109","endLine":41,"endColumn":33},{"ruleId":"127","severity":1,"message":"128","line":58,"column":34,"nodeType":"129","messageId":"130","endLine":58,"endColumn":36},{"ruleId":"106","severity":1,"message":"131","line":6,"column":10,"nodeType":"108","messageId":"109","endLine":6,"endColumn":21},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'Cake' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'initAuth' is defined but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'onFirstlineComplete' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-undef","'Typewriter' is not defined.","JSXIdentifier","undefined","'useDispatch' is defined but never used.","'userId' is assigned a value but never used.","'saveSuccess' is assigned a value but never used.","'savedData' is assigned a value but never used.","'setSavedData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation"]